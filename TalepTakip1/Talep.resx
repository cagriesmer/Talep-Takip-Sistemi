<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAIBgAAAEAIACIDAAAFgAAACgAAAAgAAAAMAAAAAEAIAAAAAAAAAwAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABcO3AAXDtwBFw7cCRcO
        3BcXDtwfFw7cHxcO3BUXDtwIFw7cABcO3AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFw7cABcO3AAXDtwEFw7cJBcO
        3EcXDtxUFw7cTxcO3EoXDtxKFw7cUBcO3FMXDtxEFw7cHxcO3AMXDtwAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABcO3AAXDtwAFw7cGxcO
        3FEXDtxOFw7cMxcO3AwXDtwCFw7cURcO3EUXDtwAFw7cDxcO3DcXDtxQFw7cTRcO3BUXDtwAFw7cAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAXDtwAFw7cARcO
        3C4XDtxWFw7cHhcO3B8XDtyLFw7cGxcO3AAXDtxKFw7cQBcO3AAXDtwnFw7ciRcO3BYXDtwlFw7cWBcO
        3CYXDtwAFw7cAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFw7cABcO
        3AAXDtwvFw7cVRcO3CAXDtwCFw7cChcO3DoXDtwmFw7cJhcO3CoXDtwqFw7cJRcO3CkXDtw4Fw7cBxcO
        3AMXDtwlFw7cWRcO3CYXDtwAFw7cAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAXDtwAFw7cHRcO3FYXDtwlFw7cjRcO3CYXDtwcFw7cMBcO3BIXDtwCFw7cHxcO3BoXDtwDFw7cFBcO
        3CcXDtwXFw7cMhcO3IkXDtwiFw7cWBcO3BUXDtwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAFw7cABcO3AUXDtxTFw7cHhcO3AUXDtwsFw7cMxcO3EkXDtw7Fw7cLhcO3HIVDNybFQzcmRcO
        3GwXDtwkFw7cIBcO3EMXDtw0Fw7cKhcO3AIXDtwnFw7cTBcO3AIXDtwAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAXDtwAFw7cKBcO3EwXDtwZFw7cBxcO3BwXDtxKFw7cWRgP3IoVC9zlFQzc/y4l
        3/8qIt//FQzc/hUM3N0ZENyCFw7cWhcO3DgXDtwXFw7cCRcO3BoXDtxSFw7cHhcO3AAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAFw7cABcO3AAXDtxLFw7cNRcO3I0XDtw0Fw7cORYN3FsgF92RYFrn92hi
        6P9oYuj/cWvp/3Bq6f9mYOj/aWTo/1pT5vIbEt2BFg3cQBcO3DIXDtw+Fw7chxcO3DYXDtxDFw7cABcO
        3AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAXDtwAFw7cCxcO3FQXDtwMFw7cIRcO3CkXDtxCFw7cYRcO
        3OZVTuX/lI/v/21n6f9XUOb/TEXk/3Vw6v+Rje7/SkPk/xYN3NsXDtxrFw7cSBcO3CUXDtwfFw7cERcO
        3FQXDtwFFw7cAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABcO3AAXDtwYFw7cTRcO3AEXDtwCFw7cLhcO
        3EgXDtyNFg3c/ywk3/+Sju//b2np/0I74/89NeL/g3/s/4B77P8hGN7/Fg3c/BcO3IcXDtxJFw7cJhcO
        3AEXDtwEFw7cUhcO3BAXDtwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFw7cABcO3CEXDtxHFw7cTxcO
        3D8XDtwvFw7cOxcO3K8XDtz/Hxbd/z434v86MuH/QTri/zkx4f89NuL/OzTh/xkQ3P8XDtz/Fw7cohcO
        3E0XDtwtFw7cSBcO3EcXDtxNFw7cFxcO3AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAXDtwAFw7cIRcO
        3EcXDtxQFw7cQBcO3C8XDtw3Fw7crhcO3P8YD9z/ODDh/y0k3/8+NuL/MCng/zUt4f8wKOD/Fg3c/xcO
        3P8XDtyjFw7cURcO3CwXDtxJFw7cSBcO3E0XDtwXFw7cAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABcO
        3AAXDtwZFw7cTRcO3AEXDtwCFw7cLRcO3EUXDtyVFw7c/xUM3P8+N+L/OzTi/0A54v84MOH/Rj/j/zEp
        4P8VDNz/Fw7c/BcO3IsXDtxSFw7cJhcO3AEXDtwEFw7cUhcO3BAXDtwAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAFw7cABcO3AsXDtxVFw7cDBcO3CEXDtwnFw7cSxcO3HQXDtzlFg3c/y4l3/9IQeP/WFLm/0Y/
        4/9EPeP/JRze/xYN3P8XDtzaFw7cQRcO3DQXDtwmFw7cHhcO3BAXDtxUFw7cBRcO3AAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAXDtwAFw7cABcO3EsXDtw0Fw7cjhcO3DQXDtw9Fw7cWhcO3JAXDtz4FAvc/0M8
        4/9VT+X/Ni7h/yMa3v8WDdz/Fw7c8xcO3IYXDtxGFw7cNRcO3D4XDtyHFw7cNxcO3EMXDtwAFw7cAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAXDtwAFw7cKBcO3EwXDtwZFw7cBxcO3BwXDtxDFw7cVhcO
        3JAVDNzmNi7h/lJL5f8sJN//HhXd/RcN3N8XDtyJFw7cSBcO3DwXDtwYFw7cChcO3BsXDtxRFw7cHhcO
        3AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABcO3AAXDtwFFw7cUxcO3B0XDtwFFw7cLBcO
        3DAXDtxBFw7cWxcO3FoWDdyLHhXdqBgP3KEWDdyKFw7caRcO3FMXDtw8Fw7cLxcO3CkXDtwCFw7cKBcO
        3E0XDtwCFw7cAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFw7cABcO3AAXDtwdFw7cVhcO
        3CQXDtyOFw7cJhcO3BwXDtw6Fw7cQxcO3EoWDdxEFw7cNxcO3DYXDtxFFw7cNRcO3BcXDtwyFw7ciRcO
        3CIXDtxYFw7cFRcO3AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFw7cABcO
        3AAXDtwvFw7cVRcO3CAXDtwCFw7cCxcO3DkXDtwmFw7cKxcO3DMXDtwzFw7cJhcO3CgXDtw3Fw7cBxcO
        3AQXDtwmFw7cWBcO3CYXDtwAFw7cAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAFw7cABcO3AAXDtwvFw7cVhcO3B0XDtwfFw7cixcO3BsXDtwAFw7cSRcO3D4XDtwAFw7cJxcO
        3IoXDtwVFw7cJBcO3FgXDtwnFw7cABcO3AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAFw7cABcO3AAXDtwbFw7cURcO3E4XDtwzFw7cDBcO3AEXDtxSFw7cRhcO
        3AAXDtwPFw7cNxcO3FAXDtxOFw7cFhcO3AAXDtwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFw7cABcO3AAXDtwEFw7cJBcO3EgXDtxUFw7cTxcO
        3EkXDtxKFw7cTxcO3FQXDtxFFw7cIBcO3AMXDtwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAXDtwAFw7cARcO
        3AoXDtwXFw7cIBcO3B8XDtwWFw7cCBcO3AEXDtwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAD/8B///8AD//+AQf/+AkD//gAAf/wAAD/4AAAf+AAAH/gAAB/wAAAP8AAAD/AA
        AA/wAAAP8AAAD/AAAA/4AAAf+AAAH/gAAB/8AAA//gAAf/8CQP//gEH//8AD///wD/8=
</value>
  </data>
</root>